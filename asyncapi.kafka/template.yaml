---
name: example
schemas:
  schema0:
    type: inline
    options:
      format: {components.schemas.item.type == object ==JSON}
      source:
        - Item:
            type: {components.schemas.item.type}
            properties:
              greeting:
                type: {components.schemas.item.properties.greeting.type}
            required:
              - {components.schemas.item.required}
bindings:
  tcp_server0:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 9092
    exit: kafka_server0
  kafka_server0:
    type: {servers.local.protocol}
    kind: server
    routes:
      - when:
          - topic: {channels.items-snapshots.address || channels.items-snapshots}
            capability: {(operations.sendEvents.action == send) == produce}
        with:
          key: ${idempotencyKey}
          acks: leader_only
        exit: kafka_client0
      - when:
        - topic: {channels.items-snapshots.address || channels.items-snapshots}
          capability: {(operations.receiveEvents.action == receive) == fetch}
        exit: kafka_client0
      - when:
          - topic: {operations.sendEvents.reply.address || operations.sendEvents.reply.channels.items-responses || operations.sendEvents.reply.channels.items-responses.address}
            capability: {operations.sendEvents.reply == fetch}
        exit: kafka_client0    
  kafka_client0:
    type: {servers.local.protocol}
    kind: client
    exit: tcp_client0
  tcp_client0:
    type: tcp
    kind: client
    options:
      host: kafka
      port: 29092
    routes:
      - when:
          - cidr: 0.0.0.0/0
